import React, { useState, useEffect } from 'react';
import { withRouter } from 'react-router';
import PropTypes from 'prop-types';
import { Link } from 'react-router-dom';
import Page from '../../Page';
import Table from '../../GeneralForm/Table';
import bn from '../../../utils/bemnames';
import {
  POWERSEARCH_ALLEGATION_NAMES,
  POWERSEARCH_BOOLEAN_SET,
  POWERSEARCH_INDUSTRY_NAMES,
  POWERSEARCH_MARKETCAP_NAMES,
  POWERSEARCH_SECTOR_NAMES,
  POWERSEARCH_VULNERABILITY_RANK,
  TABLE_FILTER_BUTTONS_APPLY_RESET,
  TABLE_FILTER_OPTIONS_DATE,
  TABLE_FILTER_OPTIONS_NUMBER,
  TABLE_FILTER_OPTIONS_TEXT,
  TABLE_FILTER_HEALTHY_FORMATTER_SET,
  TABLE_FILTER_VALUE_FORMATTER_UNKNOWN,
  TABLE_FILTER_VALUE_FORMATTER_SET,
  TABLE_FILTER_MARKET_CAP_FORMATTER_SET,
} from '../../../constants/TableConstants';
import { ACTIVIST_VULNERABILITY } from '../../../constants/ProductConstants';
import { dateToNull } from '../../../utils/general-util';
import config from '../../../config/server-config';
import {
  filters,
  distinctCounts,
  bottomStatusBarServerside,
  columnAndfilterVulnAdvSearchSidebarServerside,
  customVulnFiltersToolPanelComponent,
} from '../../../utils/AgGridFunctions';
import {
  checkValuesToFixed,
  formatCellEitherMillionsOrPercent,
  gridWidthValuesLrg,
  gridWidthValuesVLrg,
  gridWidthValuesXLrg,
} from '../../../utils/table-tools-util';
import { COMPANY_OVERVIEW } from '../../../constants/PathsConstant';
import { powersearchImageHandlerHTML } from '../../../utils/powerSearch-utils';
import DataContext from '../../../utils/VulnerabilityAdvancedSearchCustomPanelDataContext';
import { VULNERABLE_ADVSEARCH_INSIGHTIA_FILTER_LIST } from '../../../constants/PowerSearchConstants';
import { COLUMNS_DEF_ADVANCEDVULNERABILITYSEARCH_DEFAULT } from '../../../constants/PowerSearchColumnDefConstants';
import { NUMBER_ONE } from '../../../constants/NumberConstants';

const bem = bn.create('collapseCardToolPane');

const AdvancedVulnerabilitySearchTool = ({
  listFilter,
  deleteFilter,
  createFilter,
  updateFilter,
  createPowerSearchFilterReq,
  deletePowerSearchFilterReq,
  updatePowerSearchFilterReq,
  listPowerSearchFilterReq,
  isMembershipStatus,
  isShowDownload,
  token,
}) => {
  const [userId, setUserId] = useState(null);
  const dataContext = React.useContext(DataContext);
  const [isHideExcel, setIsHideExcel] = useState(true);
  useEffect(() => {
    if (token) {
      setUserId(token.User_Id);
    }
  }, [token]);

  useEffect(() => {
    setIsHideExcel(isShowDownload(ACTIVIST_VULNERABILITY, false, true));
  }, []);

  const gridOptions = {
    rowModelType: 'serverSide',
    serverSideRoute: config.getPowerSearch,
    serversideProduct: ACTIVIST_VULNERABILITY,
    serverSideTables: {
      from: 'v_vuln_search',
    },
    defaultFilterList: VULNERABLE_ADVSEARCH_INSIGHTIA_FILTER_LIST,
    defaultFilterOnClear: COLUMNS_DEF_ADVANCEDVULNERABILITYSEARCH_DEFAULT,
    defaultColDef: {
      sortable: true,
    },
    serverSideNotInline: [
      'Latest_Activist_Short_Campaign_Allegations',
      'Latest_Activist_Short_Campaign_Start_Date',
    ],
    colDefsMedalsIncluded: [
      {
        headerName: 'Company Information',
        toolPanelClass: 'hidden-panel',
        children: [
          {
            headerName: 'PID',
            field: 'v_vuln_search.pid',
            filter: 'agTextColumnFilter',
            type: ['enableRowGroup', 'enableValue'],
            aggFunc: 'count(Dist)',
            toolPanelClass: 'hidden-panel',
            allowedAggFuncs: ['count(Dist)', 'count'],
            chartDataType: 'category',
            minWidth: 65,
            maxWidth: 80,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
            },
          },
          {
            headerName: 'Company name',
            field: 'Company_Name',
            filter: 'agTextColumnFilter',
            type: ['enableRowGroup', 'enableValue'],
            aggFunc: 'count(Dist)',
            toolPanelClass: 'hidden-panel',
            allowedAggFuncs: ['count(Dist)', 'count'],
            chartDataType: 'category',
            minWidth: 290,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
            },
            cellRendererFramework: (params) => (
              <div>
                <Link
                  className='text-secondary'
                  to={`${COMPANY_OVERVIEW}?pid=${params.data['v_vuln_search.pid']}`}
                  target='_blank'
                  rel='noopener noreferrer'
                >
                  {`${params.data.Company_Name}`}
                </Link>
              </div>
            ),
          },
          {
            headerName: 'Sector',
            field: 'industry_sector_name',
            filter: 'agSetColumnFilter',
            type: ['setColumn', 'enableRowGroup', 'enableValue'],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            chartDataType: 'category',
            ...gridWidthValuesXLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_SECTOR_NAMES,
              valueFormatter: TABLE_FILTER_VALUE_FORMATTER_UNKNOWN,
            },
          },
          {
            headerName: 'Industry',
            field: 'industry_name',
            filter: 'agSetColumnFilter',
            type: ['setColumn', 'enableRowGroup', 'enableValue'],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            chartDataType: 'category',
            ...gridWidthValuesXLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_INDUSTRY_NAMES,
              valueFormatter: TABLE_FILTER_VALUE_FORMATTER_UNKNOWN,
            },
          },
          {
            headerName: 'Market Cap ($M)',
            field: 'market_cap_usd',
            filter: 'agNumberColumnFilter',
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'enableValue',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            numberComparator(aVal, bVal, nodeA, nodeB, isInverted) {
              if (aVal === bVal) {
                return 0;
              }
              return aVal < bVal ? -1 : 1;
            },
            cellRendererFramework: (params) =>
              formatCellEitherMillionsOrPercent(
                null,
                false,
                checkValuesToFixed(params.data.market_cap_usd, 1)
              ),
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              filterOptions: TABLE_FILTER_OPTIONS_NUMBER,
            },
          },
          {
            headerName: 'Market Cap Category',
            field: 'marketcap',
            filter: 'agSetColumnFilter',
            type: ['setColumn', 'enableRowGroup', 'enableValue'],
            allowedAggFuncs: ['count(Dist)', 'count'],
            aggFunc: 'count(Dist)',
            chartDataType: 'category',
            minWidth: 180,
            maxWidth: 200,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_MARKETCAP_NAMES,
              suppressSorting: true,
              valueFormatter: TABLE_FILTER_MARKET_CAP_FORMATTER_SET,
            },
          },
          {
            headerName: 'Current Vulnerability Score',
            field: 'current_score',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agNumberColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesVLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              filterOptions: TABLE_FILTER_OPTIONS_NUMBER,
            },
            cellRendererFramework: (params) => {
              if (params.data.current_score === null) return null;
              if (params.data.current_score) {
                return checkValuesToFixed(
                  params.data.current_score,
                  NUMBER_ONE
                );
              }
              return null;
            },
          },
          {
            headerName: 'Current Vulnerability Rank',
            field: 'vulnerability_score',
            filter: 'agSetColumnFilter',
            type: ['setColumn', 'enableRowGroup', 'enableValue'],
            allowedAggFuncs: ['count(Dist)', 'count'],
            aggFunc: 'count(Dist)',
            chartDataType: 'category',
            minWidth: 180,
            maxWidth: 200,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_VULNERABILITY_RANK,
              suppressSorting: true,
              valueFormatter: TABLE_FILTER_VALUE_FORMATTER_UNKNOWN,
            },
          },
        ],
      },
      {
        headerName: 'Valuation',
        children: [
          {
            headerName: 'Peer Valuation',
            field: 'peer_Valuation',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Valuation, true),
          },
          {
            headerName: 'All Valuation',
            field: 'all_Valuation',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Valuation, true),
          },
        ],
      },
      {
        headerName: 'Performance',
        children: [
          {
            headerName: 'Peer Performance',
            field: 'peer_Performance',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Performance, true),
          },
          {
            headerName: 'All Performance',
            field: 'all_Performance',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Performance, true),
          },
        ],
      },
      {
        headerName: 'Profitability',
        children: [
          {
            headerName: 'Peer Profitability',
            field: 'peer_Profitability',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Profitability, true),
          },
          {
            headerName: 'All Profitability',
            field: 'all_Profitability',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Profitability, true),
          },
        ],
      },
      {
        headerName: 'Growth',
        children: [
          {
            headerName: 'Peer Growth',
            field: 'peer_Growth',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Growth, true),
          },
          {
            headerName: 'All Growth',
            field: 'all_Growth',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Growth, true),
          },
        ],
      },
      {
        headerName: 'Balance Sheet',
        children: [
          {
            headerName: 'Peer Balance Sheet',
            field: 'peer_Balance_Sheet',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Balance_Sheet, true),
          },
          {
            headerName: 'All Balance Sheet',
            field: 'all_Balance_Sheet',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Balance_Sheet, true),
          },
        ],
      },
      {
        headerName: 'Institutional Investment',
        children: [
          {
            headerName: 'Peer Institutional Investment',
            field: 'peer_II',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_II, true),
          },
          {
            headerName: 'All Institutional Investment',
            field: 'all_II',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_II, true),
          },
        ],
      },
      {
        headerName: 'Activist Investment',
        children: [
          {
            headerName: 'Peer Activist Investment',
            field: 'peer_AI',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_AI, true),
          },
          {
            headerName: 'All Activist Investment',
            field: 'all_AI',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_AI, true),
          },
        ],
      },
      {
        headerName: 'Director Support',
        children: [
          {
            headerName: 'Peer Director Support',
            field: 'peer_VFD',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_VFD, true),
          },
          {
            headerName: 'All Director Support',
            field: 'all_VFD',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_VFD, true),
          },
        ],
      },
      {
        headerName: 'Remuneration Support',
        children: [
          {
            headerName: 'Peer Remuneration Support',
            field: 'peer_VFR',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_VFR, true),
          },
          {
            headerName: 'All Remuneration Support',
            field: 'all_VFR',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_VFR, true),
          },
        ],
      },
      {
        headerName: 'No. of Directors',
        children: [
          {
            headerName: 'Peer No. of Directors',
            field: 'peer_numD',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_numD, true),
          },
          {
            headerName: 'All No. of Directors',
            field: 'all_numD',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_numD, true),
          },
        ],
      },
      {
        headerName: 'Director Tenure',
        children: [
          {
            headerName: 'Peer Director Tenure',
            field: 'peer_Tenure',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_Tenure, true),
          },
          {
            headerName: 'All Director Tenure',
            field: 'all_Tenure',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_Tenure, true),
          },
        ],
      },
      {
        headerName: 'Director Age',
        children: [
          {
            headerName: 'Peer Director Age',
            field: 'peer_DAge',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.peer_DAge, true),
          },
          {
            headerName: 'All Director Age',
            field: 'all_DAge',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_HEALTHY_FORMATTER_SET,
            },
            cellRenderer: (params) =>
              powersearchImageHandlerHTML(params.data.all_DAge, true),
          },
        ],
      },
      {
        headerName: 'Reporting',
        children: [
          {
            headerName: 'In Play',
            field: 'Campaign_in_play',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_VALUE_FORMATTER_SET,
            },
            cellRenderer: (params) => {
              const eDiv = document.createElement('div');
              if (params.data.Campaign_in_play !== undefined && params.data.Campaign_in_play !== null) {
                if (params.data.Campaign_in_play.toString() === '1') {
                  eDiv.innerHTML += '<div>Yes</div>';
                } if (params.data.Campaign_in_play.toString() === '0') {
                  eDiv.innerHTML += '<div>No</div>';
                }
              } else {
                eDiv.innerHTML += '<div>-</div>';
              }
              return eDiv;
            }
          },
          {
            headerName: 'Reports',
            field: 'has_report',
            filter:
              isMembershipStatus(ACTIVIST_VULNERABILITY, true, false) &&
              'agSetColumnFilter',
            toolPanelClass: isMembershipStatus(
              ACTIVIST_VULNERABILITY,
              '',
              'hidden-panel'
            ),
            type: [
              'numberColumn',
              'rightAligned',
              'enableRowGroup',
              'hiddenField',
            ],
            aggFunc: 'count(Dist)',
            allowedAggFuncs: ['count(Dist)', 'count'],
            enablePivot: true,
            chartDataType: 'category',
            ...gridWidthValuesLrg,
            filterParams: {
              buttons: TABLE_FILTER_BUTTONS_APPLY_RESET,
              values: POWERSEARCH_BOOLEAN_SET,
              valueFormatter: TABLE_FILTER_VALUE_FORMATTER_SET,
            },
            cellRenderer: (params) => {
                const eDiv = document.createElement('div');
                if (params.data.has_report !== undefined && params.data.has_report !== null) {
                  if (params.data.has_report.toString() === '1') {
                    eDiv.innerHTML += '<div class="text-center">Yes</div>';
                  } if (params.data.has_report.toString() === '0') {
                    eDiv.innerHTML += '<div class="text-center">No</div>';
                  }
                } else {
                  eDiv.innerHTML += '<div>-</div>';
                }
                return eDiv;
              }
          },
        ],
      },
    ],
    colDefsMedalsExcluded: [],
    pinColumns: {
      isPinOption: true,
      columns: [
        {
          colId: 'v_vuln_search.pid',
          pinned: 'left',
        },
        {
          colId: 'Company_Name',
          pinned: 'left',
        },
      ],
    },
    columnTypes: filters,
    paggination: { isPagging: false, pageSize: 10 },
    isfloatingFilter: false,
    pivotMode: false,
    sideBar: columnAndfilterVulnAdvSearchSidebarServerside,
    frameworkComponents: customVulnFiltersToolPanelComponent,
    statusBar: bottomStatusBarServerside,
    suppressAggFuncInHeader: true,
    aggFuncs: {
      'count(Dist)': distinctCounts,
    },
    rowSelection: 'multiple',
    domLayout: 'normal',
    gridHeight: '80vh',
    suppressFieldDotNotation: true,
    saveFilter: true,
    saveFilterParams: {
      listFilter,
      deleteFilter,
      createFilter,
      updateFilter,
      createFilterFx: createPowerSearchFilterReq,
      deleteFilterFx: deletePowerSearchFilterReq,
      listFilterFx: listPowerSearchFilterReq,
      updateFilterFx: updatePowerSearchFilterReq,
      userId,
    },
    refreshServer: true,
    HeaderGrouping: {
      isHeaderChildren: true,
      isgroupHeaderVertical: false,
      groupHeaderHeight: 55,
    },
    dataContextFilter: dataContext,
  };
  return (
    <div className={bem.b('')}>
      <Page title='Advanced Vulnerability Search'>
        <Table
          title='Advanced Vulnerability Search'
          gridOptions={gridOptions}
          IsShowCard={false}
          hideExcelDownloadIcon={isHideExcel}
        />
      </Page>
    </div>
  );
};

AdvancedVulnerabilitySearchTool.propTypes = {
  createFilter: PropTypes.array,
  createPowerSearchFilterReq: PropTypes.func,
  deleteFilter: PropTypes.array,
  deletePowerSearchFilterReq: PropTypes.func,
  isMembershipStatus: PropTypes.func,
  listFilter: PropTypes.array,
  listPowerSearchFilterReq: PropTypes.func,
  token: PropTypes.object,
  updateFilter: PropTypes.array,
  updatePowerSearchFilterReq: PropTypes.func,
};

AdvancedVulnerabilitySearchTool.defaultProps = {
  createFilter: [],
  createPowerSearchFilterReq: () => {},
  deleteFilter: [],
  deletePowerSearchFilterReq: () => {},
  isMembershipStatus: () => {},
  listFilter: [],
  listPowerSearchFilterReq: () => {},
  token: {},
  updateFilter: [],
  updatePowerSearchFilterReq: () => {},
};

export default withRouter(React.memo(AdvancedVulnerabilitySearchTool));
